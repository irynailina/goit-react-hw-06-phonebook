{"version":3,"sources":["components/Contacts/contacts.module.css","components/Form/form.module.css","components/ContactsItem/contactsItem.module.css","components/ContactsList/contactsList.module.css","components/Filter/filter.module.css","components/InputForm/inputForm.module.css","transitions/slide.module.css","transitions/popup.module.css","components/InputForm/InputForm.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","redux/phoneActions.js","components/Contacts/Contacts.js","App.js","redux/phoneReducers.js","redux/store.js","index.js"],"names":["module","exports","InputForm","value","handleChange","placeholder","type","name","className","styles","input","onChange","Form","state","contacts","number","reset","setState","e","target","handleSubmit","preventDefault","newContact","id","uuidv4","props","getContact","addContact","nameId","this","onSubmit","htmlFor","addButton","Component","ContactsItem","contact","deleteContact","idx","trEven","trOdd","deleteBtn","onClick","ContactsList","contactsWrap","list","tableHead","TransitionGroup","component","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideTransition","Filter","addFilter","findWrap","search","searchInput","createAction","connect","filter","container","header","title","formWrap","some","NotificationManager","info","in","length","popupTransition","item","toLowerCase","includes","App","contactReducer","createReducer","action","payload","filterReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a40a9df5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"contacts_container__1FJXu\",\"header\":\"contacts_header__ctY0R\",\"title\":\"contacts_title__3D4RJ\",\"formWrap\":\"contacts_formWrap__Z7AS_\",\"contacts\":\"contacts_contacts__2-pwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"form_name__3PsRu\",\"number\":\"form_number__J--6n\",\"addButton\":\"form_addButton__1jug5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"contactsItem_deleteBtn__rBb0I\",\"listItem\":\"contactsItem_listItem__2a4FG\",\"name\":\"contactsItem_name__YGlGy\",\"number\":\"contactsItem_number__wK1cx\",\"trOdd\":\"contactsItem_trOdd__3JWxC\",\"trEven\":\"contactsItem_trEven__2dlLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsWrap\":\"contactsList_contactsWrap__3G2Ba\",\"list\":\"contactsList_list__5YoVy\",\"tableHead\":\"contactsList_tableHead__3MnjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"filter_search__25RH5\",\"searchInput\":\"filter_searchInput__1e-Yc\",\"findWrap\":\"filter_findWrap__2esEB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"inputForm_input__1kwhx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__18FJW\",\"enterActive\":\"slide_enterActive__1STnf\",\"exit\":\"slide_exit__2eyPl\",\"exitActive\":\"slide_exitActive__1uFGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"popup_enter__3gFVi\",\"enterActive\":\"popup_enterActive__2ajmw\",\"exit\":\"popup_exit__DNzHh\",\"exitActive\":\"popup_exitActive__rn15-\"};","import React from \"react\";\r\nimport styles from \"./inputForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function InputForm({\r\n  value,\r\n  handleChange,\r\n  placeholder,\r\n  type,\r\n  name,\r\n}) {\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      name={name}\r\n      onChange={handleChange}\r\n    ></input>\r\n  );\r\n}\r\n\r\nInputForm.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport InputForm from \"../InputForm/InputForm\";\r\nimport styles from \"./form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    this.props.getContact(newContact) && this.props.addContact(newContact);\r\n    this.reset();\r\n  };\r\n\r\n  nameId = uuidv4();\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={styles.name} htmlFor={uuidv4()}>\r\n            Name:\r\n          </label>\r\n          <InputForm\r\n            type=\"tel\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            handleChange={this.handleChange}\r\n            id={this.nameId}\r\n            name=\"name\"\r\n          />\r\n          <label className={styles.number} htmlFor={this.nameId}>\r\n            Number:\r\n          </label>\r\n          <InputForm\r\n            type=\"tel\"\r\n            placeholder=\"Enter number\"\r\n            value={number}\r\n            handleChange={this.handleChange}\r\n            id={this.nameId}\r\n            name=\"number\"\r\n          />\r\n          <button className={styles.addButton} type=\"submit\">\r\n            Add\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styles from \"./contactsItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsItem = ({\r\n  contact: { id, name, number },\r\n  deleteContact,\r\n  idx,\r\n}) => (\r\n  <>\r\n    <tr className={idx % 2 === 0 ? styles.trEven : styles.trOdd}>\r\n      <td>{name}</td>\r\n      <td>{number}</td>\r\n      <td>\r\n        <button className={styles.deleteBtn} id={id} onClick={deleteContact}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </>\r\n);\r\n\r\nexport default ContactsItem;\r\n\r\nContactsItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactsItem from \"../ContactsItem/ContactsItem\";\r\nimport styles from \"./contactsList.module.css\";\r\nimport slideTransition from \"../../transitions/slide.module.css\";\r\n\r\nfunction ContactsList({ contacts = [], deleteContact }) {\r\n  return (\r\n    <div className={styles.contactsWrap}>\r\n      <table className={styles.list}>\r\n        <thead className={styles.tableHead}>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Number</th>\r\n            <th>Handle</th>\r\n          </tr>\r\n        </thead>\r\n        <TransitionGroup component=\"tbody\">\r\n          {contacts.map((contact, idx) => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              timeout={250}\r\n              unmountOnExit\r\n              classNames={slideTransition}\r\n            >\r\n              <ContactsItem\r\n                key={contact.id}\r\n                contact={contact}\r\n                deleteContact={() => deleteContact(contact.id)}\r\n                idx={idx}\r\n              />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ addFilter }) => {\r\n  const filterChange = (e) => {\r\n    addFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.findWrap}>\r\n        <label className={styles.search}>Find contacts by name:</label>\r\n        <input className={styles.searchInput} onChange={filterChange}></input>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  addFilter: PropTypes.func,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"ADD_NEW_CONTACT\");\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\");\r\nexport const addFilter = createAction(\"FILTER_CONTACT\");\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport Form from \"../Form/Form\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport styles from \"./contacts.module.css\";\r\nimport popupTransition from \"../../transitions/popup.module.css\";\r\nimport { addContact, deleteContact, addFilter } from \"../../redux/phoneActions\";\r\n\r\nconst Contacts = (props) => {\r\n  const getContact = (newContact) => {\r\n    const { name } = newContact;\r\n    const newName = props.contacts.some((contact) => contact.name === name);\r\n    if (newName) {\r\n      NotificationManager.info(\"This contact is already exist!\");\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const filterContacts = () => {\r\n    return props.contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(props.filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.header}>\r\n          <h2 className={styles.title}>Phonebook</h2>\r\n        </div>\r\n        <div className={styles.formWrap}>\r\n          <Form addContact={props.addContact} getContact={getContact} />\r\n        </div>\r\n        <h2 className={styles.contacts}>Contacts</h2>\r\n        <CSSTransition\r\n          in={props.contacts.length > 1}\r\n          timeout={250}\r\n          classNames={popupTransition}\r\n          unmountOnExit\r\n        >\r\n          <Filter addFilter={props.addFilter} />\r\n        </CSSTransition>\r\n        <ContactsList\r\n          contacts={filterContacts()}\r\n          deleteContact={props.deleteContact}\r\n        />\r\n      </div>\r\n        <NotificationContainer timeout={500}>\r\n          <button className=\"btn btn-info\"></button>\r\n        </NotificationContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n    filter: state.filter,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContact,\r\n  deleteContact,\r\n  addFilter,\r\n})(Contacts);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  addContact: PropTypes.func.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n  addFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nconst App = () => (\n  <>\n    <Contacts />\n  </>\n);\n\nexport default App;\n","import { addFilter, addContact, deleteContact } from \"./phoneActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst contactReducer = createReducer([], {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) => [\r\n    ...state.filter((contact) => contact.id !== action.payload),\r\n  ],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [addFilter]: (state, action) => {\r\n    return (state = action.payload);\r\n  },\r\n});\r\n\r\nexport { contactReducer, filterReducer };\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { contactReducer, filterReducer } from \"./phoneReducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"contacts\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  }),\r\n});\r\n\r\nexport default store;\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App';\nimport store from './redux/store'\nimport {persistor} from './redux/store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <App />\n    </PersistGate>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}